{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Spade\\\\Desktop\\\\LearningReact\\\\lists-conditionals\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; // Class components\n//import React, {useState} from 'react';  // Functional components with Hooks\n\nimport './App.css';\nimport Person from './Person/Person'; // Class-based component\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        name: \"Bob\",\n        age: 23\n      }, {\n        name: \"Randers\",\n        age: 25\n      }, {\n        name: \"Stephanie\",\n        age: 22\n      }],\n      otherState: \"Other\",\n      showPersons: false\n    };\n\n    this.switchNameHandler = newName => {\n      //console.log(\"Click\");\n      // DON'T DO THIS: this.state.persons[0].name = \"Bobabillion\"\n      this.setState({\n        persons: [{\n          name: newName,\n          age: 23\n        }, {\n          name: \"Randers\",\n          age: 25\n        }, {\n          name: \"Stephanie\",\n          age: 24\n        }]\n      });\n    };\n\n    this.nameChangeHandler = event => {\n      this.setState({\n        persons: [{\n          name: \"Bob\",\n          age: 23\n        }, {\n          name: event.target.value,\n          age: 24\n        }, {\n          name: \"Stephanie\",\n          age: 26\n        }]\n      });\n    };\n\n    this.togglePersonHandler = () => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      backgroundColor: 'white',\n      font: 'inherit',\n      border: 'solid blue thin',\n      padding: '8px',\n      cursor: 'pointer'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, \"Hello, I am a React app\"), /*#__PURE__*/React.createElement(\"button\", {\n      style: style,\n      onClick: this.togglePersonHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, \"Show People\"), this.state.showPersons === true ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Person, {\n      name: this.state.persons[0].name,\n      age: this.state.persons[0].age,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Person, {\n      name: this.state.persons[1].name,\n      age: this.state.persons[1].age,\n      click: this.switchNameHandler.bind(this, \"Bobabillion\"),\n      changed: this.nameChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, \"My hobbies: racing\"), /*#__PURE__*/React.createElement(Person, {\n      name: this.state.persons[2].name,\n      age: this.state.persons[2].age,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    })) : null);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Spade/Desktop/LearningReact/lists-conditionals/src/App.js"],"names":["React","Component","Person","App","state","persons","name","age","otherState","showPersons","switchNameHandler","newName","setState","nameChangeHandler","event","target","value","togglePersonHandler","doesShow","render","style","backgroundColor","font","border","padding","cursor","bind"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'; // Class components\n//import React, {useState} from 'react';  // Functional components with Hooks\nimport './App.css';\nimport Person from'./Person/Person';\n\n// Class-based component\n\nclass App extends Component {\n  state = {\n    persons: [\n      {name: \"Bob\", age: 23},\n      {name: \"Randers\", age: 25},\n      {name: \"Stephanie\", age: 22}\n    ],\n    otherState: \"Other\",\n    showPersons: false\n  }\n\n  switchNameHandler = (newName) => {\n      //console.log(\"Click\");\n      // DON'T DO THIS: this.state.persons[0].name = \"Bobabillion\"\n      this.setState( {\n        persons: [\n          {name: newName, age: 23},\n          {name: \"Randers\", age: 25},\n          {name: \"Stephanie\", age: 24}\n        ]\n      } )\n  }\n\n  nameChangeHandler = (event) => {\n    this.setState( {\n      persons: [\n        {name: \"Bob\", age:23},\n        {name: event.target.value, age: 24},\n        {name: \"Stephanie\", age:26}\n      ]\n    })\n  }\n\n  togglePersonHandler = () => {\n    const doesShow = this.state.showPersons;\n    this.setState({showPersons: !doesShow});\n  }\n\n  render() {\n\n    const style = {\n      backgroundColor: 'white',\n      font: 'inherit',\n      border: 'solid blue thin',\n      padding: '8px',\n      cursor: 'pointer'\n    };\n\n    return (\n      <div className=\"App\">\n        <h1>Hello, I am a React app</h1>\n        <button \n        style={style}\n        onClick={this.togglePersonHandler} >Show People</button>\n        {\n          this.state.showPersons === true ?\n          <div>\n            <Person \n              name={this.state.persons[0].name} \n              age={this.state.persons[0].age}  />\n            <Person \n              name={this.state.persons[1].name} \n              age={this.state.persons[1].age}\n              click={this.switchNameHandler.bind(this, \"Bobabillion\")}\n              changed={this.nameChangeHandler} >My hobbies: racing</Person>\n            <Person \n              name={this.state.persons[2].name} \n              age={this.state.persons[2].age}/>\n            </div> : null\n        }\n        \n      </div>\n    );\n\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}