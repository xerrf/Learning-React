{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Spade\\\\Desktop\\\\LearningReact\\\\component-deep-dive\\\\src\\\\container\\\\App.js\";\nimport React, { Component } from 'react'; // Class components\n//import React, {useState} from 'react';  // Functional components with Hooks\n\nimport styles from './App.module.css';\nimport Persons from '../components/Persons/Persons';\nimport Cockpit from '../components/Cockpit/Cockpit';\nimport WithClass from '../hoc/WithClass';\nimport AuthContext from '../Context/auth-context'; // Class-based component\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      persons: [{\n        id: '342',\n        name: 'Bob',\n        age: 23\n      }, {\n        id: '123rj',\n        name: 'Randers',\n        age: 25\n      }, {\n        id: 'qwiu',\n        name: 'Stephanie',\n        age: 22\n      }],\n      otherState: \"Other\",\n      showPersons: false,\n      showCockpit: true,\n      authenticated: false\n    };\n\n    this.nameChangeHandler = (event, id) => {\n      // Get the index of the matching id argument\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      }); // Copy the current person at the matched index to a new person object\n\n      const personUpdated = { ...this.state.persons[personIndex]\n      }; // Update the copy's name\n\n      personUpdated.name = event.target.value; // Copy the persons arrray to then swap in the updated value\n\n      const personsUpdated = [...this.state.persons];\n      personsUpdated[personIndex] = personUpdated; // Update the State array\n\n      this.setState({\n        persons: personsUpdated\n      });\n    };\n\n    this.togglePersonHandler = () => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n\n    this.deletePersonHandler = index => {\n      const p = [...this.state.persons];\n      p.splice(index, 1);\n      this.setState({\n        persons: p\n      });\n    };\n\n    this.toggleCockpitHandler = () => {\n      const showCock = this.state.showCockpit;\n      this.setState({\n        showCockpit: !showCock\n      });\n    };\n\n    this.loginHandler = () => {\n      this.setState({\n        authenticated: true\n      });\n      AuthContext.authenticated = this.state.authenticated;\n    };\n\n    console.log(\"[App.js] Constructor\");\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    console.log('[App.js] getDerivedState()', props);\n    return state;\n  }\n\n  componentWillUnmount() {\n    console.log('[App.js] componentWillUnmount()');\n  }\n\n  componentDidMount() {\n    console.log('[App.js] componentDidMount()');\n  }\n\n  shouldComponentUpdate() {\n    console.log('[App.js] shouldComponentUpdate()');\n    return true;\n  }\n\n  componentDidUpdate() {\n    console.log('[App.js] componentDidUpdate()');\n  }\n\n  render() {\n    let personsComp = null;\n\n    if (this.state.showPersons) {\n      personsComp = /*#__PURE__*/React.createElement(Persons, {\n        persons: this.state.persons,\n        clicked: this.deletePersonHandler,\n        changed: this.nameChangeHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }\n      });\n    }\n\n    let cockpitComp = null;\n\n    if (this.state.showCockpit) {\n      cockpitComp = /*#__PURE__*/React.createElement(AuthContext.Provider, {\n        value: {\n          authenticated: this.state.authenticated,\n          login: this.loginHandler\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Cockpit, {\n        title: this.props.appTitle,\n        showPersons: this.state.showPersons,\n        personsLength: this.state.persons.length,\n        clicked: this.togglePersonHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      cockpitComp = null;\n    }\n\n    return /*#__PURE__*/React.createElement(WithClass, {\n      classes: styles.App,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.toggleCockpitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, \"Toggle Cockpit\"), cockpitComp, personsComp);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Spade/Desktop/LearningReact/component-deep-dive/src/container/App.js"],"names":["React","Component","styles","Persons","Cockpit","WithClass","AuthContext","App","constructor","props","state","persons","id","name","age","otherState","showPersons","showCockpit","authenticated","nameChangeHandler","event","personIndex","findIndex","p","personUpdated","target","value","personsUpdated","setState","togglePersonHandler","doesShow","deletePersonHandler","index","splice","toggleCockpitHandler","showCock","loginHandler","console","log","getDerivedStateFromProps","componentWillUnmount","componentDidMount","shouldComponentUpdate","componentDidUpdate","render","personsComp","cockpitComp","login","appTitle","length"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'; // Class components\n//import React, {useState} from 'react';  // Functional components with Hooks\nimport styles from './App.module.css'; \nimport Persons from '../components/Persons/Persons';\nimport Cockpit from '../components/Cockpit/Cockpit';\nimport WithClass from '../hoc/WithClass';\nimport AuthContext from '../Context/auth-context';\n\n// Class-based component\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    console.log(\"[App.js] Constructor\");\n  }\n\n  state = {\n    persons: [\n      {id: '342', name: 'Bob', age: 23},\n      {id: '123rj', name: 'Randers', age: 25},\n      {id: 'qwiu', name: 'Stephanie', age: 22}\n    ],\n    otherState: \"Other\",\n    showPersons: false,\n    showCockpit: true,\n    authenticated: false\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    console.log('[App.js] getDerivedState()', props);\n    return state;\n  }\n\n  \n  componentWillUnmount() {\n    console.log('[App.js] componentWillUnmount()');\n  }\n\n  componentDidMount() {\n    console.log('[App.js] componentDidMount()');\n  }\n\n  shouldComponentUpdate() {\n    console.log('[App.js] shouldComponentUpdate()');\n    return true;\n  }\n\n  componentDidUpdate() {\n    console.log('[App.js] componentDidUpdate()');\n  }\n\n  nameChangeHandler = (event, id) => {\n    // Get the index of the matching id argument\n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id;\n    });\n\n    // Copy the current person at the matched index to a new person object\n    const personUpdated = {...this.state.persons[personIndex]};\n\n    // Update the copy's name\n    personUpdated.name = event.target.value;\n\n    // Copy the persons arrray to then swap in the updated value\n    const personsUpdated = [...this.state.persons];\n    personsUpdated[personIndex] = personUpdated;\n\n    // Update the State array\n    this.setState( {persons: personsUpdated} );\n  }\n\n  togglePersonHandler = () => {\n    const doesShow = this.state.showPersons;\n    this.setState({showPersons: !doesShow});\n  }\n\n  deletePersonHandler = (index) => {\n    const p = [...this.state.persons];\n    p.splice(index, 1);\n    this.setState({persons: p});\n  }\n\n  toggleCockpitHandler = () => {\n    const showCock = this.state.showCockpit;\n    this.setState({showCockpit: !showCock});\n  }\n\n  loginHandler = () => {\n    this.setState({authenticated: true});\n    AuthContext.authenticated = this.state.authenticated;\n  }\n\n  render() {\n\n    let personsComp = null;\n\n    if(this.state.showPersons) {\n      personsComp = <Persons \n        persons={this.state.persons}\n        clicked={this.deletePersonHandler}\n        changed={this.nameChangeHandler} />;    \n    }\n\n    let cockpitComp = null;\n    if(this.state.showCockpit) {\n      cockpitComp = (\n        <AuthContext.Provider value={{\n            authenticated: this.state.authenticated,\n            login: this.loginHandler\n          }}>\n          <Cockpit\n            title={this.props.appTitle}\n            showPersons={this.state.showPersons}\n            personsLength={this.state.persons.length}\n            clicked={this.togglePersonHandler} />\n        </AuthContext.Provider>)\n        \n    } else {cockpitComp = null;}\n\n    return (\n      <WithClass classes={styles.App}>\n        <button onClick={this.toggleCockpitHandler}>Toggle Cockpit</button>\n        {cockpitComp}\n        {personsComp}\n      </WithClass>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}