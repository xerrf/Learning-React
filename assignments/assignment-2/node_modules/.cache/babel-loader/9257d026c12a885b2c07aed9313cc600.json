{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Spade\\\\Desktop\\\\LearningReact\\\\assignments\\\\assignment-2\\\\src\\\\App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport ValidationComponent from './ValidationComponent/ValidationComponent';\nimport CharComponent from './CharComponent/CharComponent';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      length: 0,\n      word: ''\n    };\n\n    this.getLength = event => {\n      this.setState({\n        length: event.target.value.length,\n        word: event.target.value\n      });\n    };\n\n    this.removeCharHanlder = index => {\n      // Create a copy and make it an array\n      console.log(index);\n      let stateCopy = { ...this.state\n      };\n      let wordCopyArr = stateCopy.word.split('');\n      console.log(\"wordCopyArr: \" + wordCopyArr); // Remove indexed element\n\n      wordCopyArr.splice(index, 1);\n      console.log(\"wordCopyArr: \" + wordCopyArr); // Rejoin the array into a string\n\n      let newWord = wordCopyArr.join('');\n      console.log(newWord);\n      let newLength = newWord.length; // Update State\n\n      this.setState({\n        word: newWord,\n        length: newLength\n      });\n    };\n  }\n\n  // Need to change input value on click event and add keys.\n  render() {\n    let charList = null;\n\n    if (this.state.length > 0) {\n      // For each character in word string\n      let stateCopy = { ...this.state\n      };\n      let wordArray = stateCopy.word.split('');\n      charList = wordArray.map((char, index) => {\n        // Assign a CharComponent\n        console.log(char);\n        return /*#__PURE__*/_jsxDEV(CharComponent, {\n          letter: char,\n          clicked: () => this.removeCharHanlder(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 18\n        }, this);\n      });\n    } else {\n      charList = null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.word,\n        onChange: event => this.getLength(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Length: \", this.state.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ValidationComponent, {\n        length: this.state.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"letters\",\n        children: charList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Spade/Desktop/LearningReact/assignments/assignment-2/src/App.js"],"names":["React","Component","ValidationComponent","CharComponent","App","state","length","word","getLength","event","setState","target","value","removeCharHanlder","index","console","log","stateCopy","wordCopyArr","split","splice","newWord","join","newLength","render","charList","wordArray","map","char"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\nimport ValidationComponent from './ValidationComponent/ValidationComponent';\nimport CharComponent from './CharComponent/CharComponent';\n\nclass App extends Component {\n\n  state = {\n    length: 0,\n    word: ''\n  }\n\n  getLength = (event) => {\n    this.setState( {\n      length: event.target.value.length,\n      word: event.target.value\n    } );\n  }\n\n  removeCharHanlder = (index) => {\n    // Create a copy and make it an array\n    console.log(index);\n\n    let stateCopy = {...this.state};\n    let wordCopyArr = stateCopy.word.split('');\n    console.log(\"wordCopyArr: \" + wordCopyArr);\n\n    // Remove indexed element\n    wordCopyArr.splice(index, 1);\n    console.log(\"wordCopyArr: \" + wordCopyArr);\n\n    // Rejoin the array into a string\n    let newWord = wordCopyArr.join('');\n    console.log(newWord);\n    let newLength = newWord.length;\n\n    // Update State\n    this.setState({word: newWord, length: newLength});\n  }\n\n  // Need to change input value on click event and add keys.\n\n  render() {\n\n    let charList = null;\n    if (this.state.length > 0) {\n      // For each character in word string\n      let stateCopy = {...this.state};\n      let wordArray = stateCopy.word.split('');\n      \n      charList = wordArray.map( (char, index) => {\n        // Assign a CharComponent\n        console.log(char);\n        return ( <CharComponent \n          letter={char}\n          clicked={() => this.removeCharHanlder(index)} /> );\n      });\n    } else {charList = null;}\n    \n    return (\n      <div className=\"App\">\n        <input type=\"text\"\n        value={this.state.word}\n        onChange={(event) => this.getLength(event)} />\n        <p>Length: {this.state.length}</p>\n        <ValidationComponent length={this.state.length} />\n        <div className=\"letters\">{charList}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}