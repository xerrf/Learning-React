{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Spade\\\\Desktop\\\\LearningReact\\\\assignments\\\\assignment-2\\\\src\\\\App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport ValidationComponent from './ValidationComponent/ValidationComponent';\nimport CharComponent from './CharComponent/CharComponent';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      length: 0,\n      word: ''\n    };\n\n    this.getLength = event => {\n      this.setState({\n        length: event.target.value.length,\n        word: event.target.value\n      });\n    };\n\n    this.removeCharHanlder = index => {\n      // Create a copy and make it an array\n      const wordCopy = { ...this.state.word\n      };\n      console.log(wordCopy); // Remove indexed element\n\n      wordCopy.splice(index, 1);\n      console.log(wordCopy); // Rejoin the array into a string\n\n      wordCopy.join('');\n      console.log(wordCopy);\n      let newLength = wordCopy.length; // Update State\n\n      this.setState({\n        word: wordCopy,\n        length: newLength\n      });\n    };\n  }\n\n  render() {\n    let charList = null;\n\n    if (this.state.length > 0) {\n      // For each character in word string\n      let wordArray = this.state.word.split('');\n      charList = wordArray.map((char, index) => {\n        // Assign a CharComponent\n        console.log(char);\n        return /*#__PURE__*/_jsxDEV(CharComponent, {\n          letter: char,\n          clicked: () => this.removeCharHanlder(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 18\n        }, this);\n      });\n    } else {\n      charList = null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: event => this.getLength(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Length: \", this.state.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ValidationComponent, {\n        length: this.state.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"letters\",\n        children: charList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Spade/Desktop/LearningReact/assignments/assignment-2/src/App.js"],"names":["React","Component","ValidationComponent","CharComponent","App","state","length","word","getLength","event","setState","target","value","removeCharHanlder","index","wordCopy","console","log","splice","join","newLength","render","charList","wordArray","split","map","char"],"mappings":";;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,mBAAP,MAAgC,2CAAhC;AACA,OAAOC,aAAP,MAA0B,+BAA1B;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BI,KAF0B,GAElB;AACNC,MAAAA,MAAM,EAAE,CADF;AAENC,MAAAA,IAAI,EAAE;AAFA,KAFkB;;AAAA,SAO1BC,SAP0B,GAObC,KAAD,IAAW;AACrB,WAAKC,QAAL,CAAe;AACbJ,QAAAA,MAAM,EAAEG,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBN,MADd;AAEbC,QAAAA,IAAI,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAFN,OAAf;AAID,KAZyB;;AAAA,SAc1BC,iBAd0B,GAcLC,KAAD,IAAW;AAC7B;AACA,YAAMC,QAAQ,GAAG,EAAC,GAAG,KAAKV,KAAL,CAAWE;AAAf,OAAjB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAH6B,CAK7B;;AACAA,MAAAA,QAAQ,CAACG,MAAT,CAAgBJ,KAAhB,EAAuB,CAAvB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAP6B,CAS7B;;AACAA,MAAAA,QAAQ,CAACI,IAAT,CAAc,EAAd;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,UAAIK,SAAS,GAAGL,QAAQ,CAACT,MAAzB,CAZ6B,CAc7B;;AACA,WAAKI,QAAL,CAAc;AAACH,QAAAA,IAAI,EAAEQ,QAAP;AAAiBT,QAAAA,MAAM,EAAEc;AAAzB,OAAd;AAED,KA/ByB;AAAA;;AAiC1BC,EAAAA,MAAM,GAAG;AAEP,QAAIC,QAAQ,GAAG,IAAf;;AACA,QAAI,KAAKjB,KAAL,CAAWC,MAAX,GAAoB,CAAxB,EAA2B;AACzB;AACA,UAAIiB,SAAS,GAAG,KAAKlB,KAAL,CAAWE,IAAX,CAAgBiB,KAAhB,CAAsB,EAAtB,CAAhB;AAEAF,MAAAA,QAAQ,GAAGC,SAAS,CAACE,GAAV,CAAe,CAACC,IAAD,EAAOZ,KAAP,KAAiB;AACzC;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AACA,4BAAS,QAAC,aAAD;AACP,UAAA,MAAM,EAAEA,IADD;AAEP,UAAA,OAAO,EAAE,MAAM,KAAKb,iBAAL,CAAuBC,KAAvB;AAFR;AAAA;AAAA;AAAA;AAAA,gBAAT;AAGD,OANU,CAAX;AAOD,KAXD,MAWO;AAACQ,MAAAA,QAAQ,GAAG,IAAX;AAAiB;;AAEzB,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AACA,QAAA,QAAQ,EAAGb,KAAD,IAAW,KAAKD,SAAL,CAAeC,KAAf;AADrB;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAA,+BAAY,KAAKJ,KAAL,CAAWC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,mBAAD;AAAqB,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC;AAAxC;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,kBAA0BgB;AAA1B;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AA1DyB;;AA6D5B,eAAelB,GAAf","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\nimport ValidationComponent from './ValidationComponent/ValidationComponent';\nimport CharComponent from './CharComponent/CharComponent';\n\nclass App extends Component {\n\n  state = {\n    length: 0,\n    word: ''\n  }\n\n  getLength = (event) => {\n    this.setState( {\n      length: event.target.value.length,\n      word: event.target.value\n    } );\n  }\n\n  removeCharHanlder = (index) => {\n    // Create a copy and make it an array\n    const wordCopy = {...this.state.word};\n    console.log(wordCopy);\n\n    // Remove indexed element\n    wordCopy.splice(index, 1);\n    console.log(wordCopy);\n\n    // Rejoin the array into a string\n    wordCopy.join('');\n    console.log(wordCopy);\n    let newLength = wordCopy.length;\n\n    // Update State\n    this.setState({word: wordCopy, length: newLength})\n\n  }\n\n  render() {\n\n    let charList = null;\n    if (this.state.length > 0) {\n      // For each character in word string\n      let wordArray = this.state.word.split('');\n      \n      charList = wordArray.map( (char, index) => {\n        // Assign a CharComponent\n        console.log(char);\n        return ( <CharComponent \n          letter={char}\n          clicked={() => this.removeCharHanlder(index)} /> );\n      });\n    } else {charList = null;}\n    \n    return (\n      <div className=\"App\">\n        <input type=\"text\"\n        onChange={(event) => this.getLength(event)} />\n        <p>Length: {this.state.length}</p>\n        <ValidationComponent length={this.state.length} />\n        <div className=\"letters\">{charList}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}